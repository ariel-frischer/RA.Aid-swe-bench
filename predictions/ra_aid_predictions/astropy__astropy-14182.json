{
    "instance_id": "astropy__astropy-14182",
    "model_patch": "diff --git a/.gitignore b/.gitignore\nindex aad550ae53..358274b981 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -89,3 +89,4 @@ pip-wheel-metadata\n \n # Files generated if figure tests are run\n results\n+.aider*\ndiff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex abdeba8efb..13a14f52cb 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -27,10 +27,14 @@ class SimpleRSTHeader(FixedWidthHeader):\n \n \n class SimpleRSTData(FixedWidthData):\n-    start_line = 3\n     end_line = -1\n     splitter_class = FixedWidthTwoLineDataSplitter\n \n+    def __init__(self, header_rows=1, **kwargs):\n+        super().__init__(**kwargs)\n+        self.header_rows = header_rows\n+        self.start_line = 2 + header_rows\n+\n \n class RST(FixedWidth):\n     \"\"\"reStructuredText simple format table.\n@@ -57,8 +61,9 @@ class RST(FixedWidth):\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n \n-    def __init__(self):\n+    def __init__(self, header_rows=1):\n         super().__init__(delimiter_pad=None, bookend=False)\n+        self.data = self.data_class(header_rows=header_rows)\n \n     def write(self, lines):\n         lines = super().write(lines)\ndiff --git a/astropy/io/ascii/tests/test_rst.py b/astropy/io/ascii/tests/test_rst.py\nindex 84d6fed401..2c341d9054 100644\n--- a/astropy/io/ascii/tests/test_rst.py\n+++ b/astropy/io/ascii/tests/test_rst.py\n@@ -170,6 +170,25 @@ table = \"\"\"\\\n dat = ascii.read(table, Reader=ascii.RST)\n \n \n+def test_read_multiple_header_rows():\n+    \"\"\"Test reading a table with multiple header rows\"\"\"\n+    table = '''\n+======= =========\n+   Col1      Col2\n+ Header    Header\n+   Row2     Row2\n+======= =========\n+   1.2    \"hello\"\n+   2.4  's worlds\n+======= =========\n+'''\n+    reader = ascii.get_reader(Reader=ascii.RST, header_rows=2)\n+    dat = reader.read(table)\n+    assert_equal(dat.colnames, [\"Col1\", \"Col2\"])\n+    assert_almost_equal(dat[0][0], 1.2)\n+    assert_equal(dat[0][1], '\"hello\"')\n+\n+\n def test_write_normal():\n     \"\"\"Write a table as a normal SimpleRST Table\"\"\"\n     out = StringIO()",
    "edited_files": [
        ".gitignore",
        "astropy/io/ascii/rst.py",
        "astropy/io/ascii/tests/test_rst.py"
    ],
    "research": "Agent run completed successfully",
    "attempt": 1
}